--
-- Test assorted system views
--
-- This test is mainly meant to provide some code coverage for the
-- set-returning functions that underlie certain system views.
-- The output of most of these functions is very environment-dependent,
-- so our ability to test with fixed expected output is pretty limited;
-- but even a trivial check of count(*) will exercise the normal code path
-- through the SRF.
select count(*) >= 0 as ok from pg_available_extension_versions;
 ok 
----
 t
(1 row)

select count(*) >= 0 as ok from pg_available_extensions;
 ok 
----
 t
(1 row)

-- At introduction, pg_config had 23 entries; it may grow
select count(*) > 20 as ok from pg_config;
 ok 
----
 t
(1 row)

-- We expect no cursors in this test; see also portals.sql
select count(*) = 0 as ok from pg_cursors;
 ok 
----
 t
(1 row)

select count(*) >= 0 as ok from pg_file_settings;
 ok 
----
 t
(1 row)

-- There will surely be at least one rule
select count(*) > 0 as ok from pg_hba_file_rules;
 ok 
----
 t
(1 row)

-- There will surely be at least one active lock
select count(*) > 0 as ok from pg_locks;
 ok 
----
 t
(1 row)

-- We expect no prepared statements in this test; see also prepare.sql
select count(*) = 0 as ok from pg_prepared_statements;
 ok 
----
 t
(1 row)

-- See also prepared_xacts.sql
select count(*) >= 0 as ok from pg_prepared_xacts;
 ok 
----
 t
(1 row)

-- This is to record the prevailing planner enable_foo settings during
-- a regression test run.
select name, setting from pg_settings where name like 'enable%';
               name                | setting 
-----------------------------------+---------
 enable_audit                      | off
 enable_audit_warning              | off
 enable_auditlogger_warning        | off
 enable_bitmapscan                 | on
 enable_buffer_mprotect            | on
 enable_check_password             | off
 enable_clog_mprotect              | on
 enable_cls                        | on
 enable_cold_hot_router_print      | off
 enable_cold_hot_visible           | off
 enable_cold_seperation            | off
 enable_committs_print             | off
 enable_concurrently_index         | off
 enable_copy_silence               | off
 enable_crypt_check                | off
 enable_crypt_debug                | on
 enable_crypt_parellel_debug       | off
 enable_data_mask                  | on
 enable_datanode_row_triggers      | off
 enable_distri_debug               | off
 enable_distri_debug_print         | off
 enable_distri_visibility_print    | off
 enable_distributed_unique_plan    | on
 enable_fast_query_shipping        | on
 enable_fga                        | on
 enable_gathermerge                | on
 enable_gtm_debug_print            | off
 enable_gtm_proxy                  | off
 enable_hashagg                    | on
 enable_hashjoin                   | on
 enable_indexonlyscan              | on
 enable_indexscan                  | on
 enable_key_value                  | off
 enable_lock_account               | off
 enable_material                   | on
 enable_memory_optimization        | on
 enable_mergejoin                  | on
 enable_multi_cluster              | on
 enable_multi_cluster_print        | off
 enable_nestloop                   | on
 enable_nestloop_suppression       | off
 enable_null_string                | off
 enable_oracle_compatible          | off
 enable_parallel_ddl               | off
 enable_pgbouncer                  | off
 enable_plpgsql_debug_print        | off
 enable_pooler_debug_print         | on
 enable_pooler_stuck_exit          | off
 enable_pooler_thread_log_print    | on
 enable_pullup_subquery            | on
 enable_replication_slot_debug     | off
 enable_sampling_analyze           | on
 enable_seqscan                    | on
 enable_shard_statistic            | on
 enable_sort                       | on
 enable_statistic                  | on
 enable_subquery_shipping          | on
 enable_tidscan                    | on
 enable_tlog_mprotect              | on
 enable_transparent_crypt          | on
 enable_user_authority_force_check | off
 enable_xlog_mprotect              | on
(62 rows)

-- Test that the pg_timezone_names and pg_timezone_abbrevs views are
-- more-or-less working.  We can't test their contents in any great detail
-- without the outputs changing anytime IANA updates the underlying data,
-- but it seems reasonable to expect at least one entry per major meridian.
-- (At the time of writing, the actual counts are around 38 because of
-- zones using fractional GMT offsets, so this is a pretty loose test.)
select count(distinct utc_offset) >= 24 as ok from pg_timezone_names;
 ok 
----
 t
(1 row)

select count(distinct utc_offset) >= 24 as ok from pg_timezone_abbrevs;
 ok 
----
 t
(1 row)

-- Let's check the non-default timezone abbreviation sets, too
set timezone_abbreviations = 'Australia';
select count(distinct utc_offset) >= 24 as ok from pg_timezone_abbrevs;
 ok 
----
 t
(1 row)

set timezone_abbreviations = 'India';
select count(distinct utc_offset) >= 24 as ok from pg_timezone_abbrevs;
 ok 
----
 t
(1 row)


--
-- Regression tests for schemas (namespaces)
--
CREATE SCHEMA test_schema_1
       CREATE UNIQUE INDEX abc_a_idx ON abc (a)
       CREATE VIEW abc_view AS
              SELECT a+1 AS a, b+1 AS b FROM abc
       CREATE TABLE abc (
              a serial,
              b int UNIQUE
       );
-- verify that the objects were created
SELECT COUNT(*) FROM pg_class WHERE relnamespace =
    (SELECT oid FROM pg_namespace WHERE nspname = 'test_schema_1');
 count 
-------
     5
(1 row)

INSERT INTO test_schema_1.abc DEFAULT VALUES;
INSERT INTO test_schema_1.abc DEFAULT VALUES;
INSERT INTO test_schema_1.abc DEFAULT VALUES;
SELECT * FROM test_schema_1.abc ORDER BY a;
 a | b 
---+---
 1 |  
 2 |  
 3 |  
(3 rows)

SELECT * FROM test_schema_1.abc_view ORDER BY a;
 a | b 
---+---
 2 |  
 3 |  
 4 |  
(3 rows)

ALTER SCHEMA test_schema_1 RENAME TO test_schema_renamed;
SELECT COUNT(*) FROM pg_class WHERE relnamespace =
    (SELECT oid FROM pg_namespace WHERE nspname = 'test_schema_1');
 count 
-------
     0
(1 row)

-- test IF NOT EXISTS cases
CREATE SCHEMA test_schema_renamed; -- fail, already exists
ERROR:  schema "test_schema_renamed" already exists
CREATE SCHEMA IF NOT EXISTS test_schema_renamed; -- ok with notice
NOTICE:  schema "test_schema_renamed" already exists, skipping
CREATE SCHEMA IF NOT EXISTS test_schema_renamed -- fail, disallowed
       CREATE TABLE abc (
              a serial,
              b int UNIQUE
       );
ERROR:  CREATE SCHEMA IF NOT EXISTS cannot include schema elements
LINE 2:        CREATE TABLE abc (
               ^
DROP SCHEMA test_schema_renamed CASCADE;
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to table test_schema_renamed.abc
drop cascades to view test_schema_renamed.abc_view
-- verify that the objects were dropped
SELECT COUNT(*) FROM pg_class WHERE relnamespace =
    (SELECT oid FROM pg_namespace WHERE nspname = 'test_schema_renamed');
 count 
-------
     0
(1 row)

CREATE SCHEMA test_schema_2
       CREATE TABLE ab (
              a serial,
              b int UNIQUE
       );
CREATE SCHEMA test_schema_3;
CREATE SCHEMA test_schema_4
       CREATE TABLE ab (
              a serial,
              b int UNIQUE
       );
INSERT INTO test_schema_2.ab(b) VALUES(1);
INSERT INTO test_schema_2.ab(b) VALUES(2);
SELECT * FROM test_schema_2.ab ORDER BY a, b;
 a | b 
---+---
 1 | 1
 2 | 2
(2 rows)

INSERT INTO test_schema_3.ab(b) VALUES(3);
ERROR:  relation "test_schema_3.ab" does not exist
LINE 1: INSERT INTO test_schema_3.ab(b) VALUES(3);
                    ^
SELECT * FROM test_schema_3.ab ORDER BY a, b;
ERROR:  relation "test_schema_3.ab" does not exist
LINE 1: SELECT * FROM test_schema_3.ab ORDER BY a, b;
                      ^
INSERT INTO test_schema_4.ab(b) VALUES(4);
INSERT INTO test_schema_4.ab(b) VALUES(5);
SELECT * FROM test_schema_4.ab ORDER BY a, b;
 a | b 
---+---
 1 | 4
 2 | 5
(2 rows)

DROP SCHEMA test_schema_2 CASCADE;
NOTICE:  drop cascades to table test_schema_2.ab
DROP SCHEMA test_schema_3 CASCADE;
DROP SCHEMA test_schema_4 CASCADE;
NOTICE:  drop cascades to table test_schema_4.ab
